#!/usr/bin/perl 
#===============================================================================
#
#         FILE:  check_qnapraid
#
#        USAGE:  ./check_qnapraid
#
#  DESCRIPTION: nagios check to monitor the health of the qnap
#  appliances. Tested with a TS-859U-RP+ Turbo NAS
#
#      OPTIONS:  ---
# REQUIREMENTS:  ---
#         BUGS:  ---
#        NOTES:  ---
#       AUTHOR:  Natxo Asenjo (), nasenjo@asenjo.nl
#      COMPANY:
#      VERSION:  1.0
#      CREATED:  07/07/2011 10:00:00 PM
#     REVISION:  ---
#===============================================================================

# use common sense
use strict;
use warnings;

# variables:
my ( $host, $community, $oid_softraidstatus, $help );

# load snmp library
use Net::SNMP;

# load cli parsing arguments
use Getopt::Long;

# load documentatation module
use Pod::Usage;

# parse cli arguemnents. Require both $host and community or help
Getopt::Long::Configure( "no_ignore_case", "bundling" );

GetOptions(
    'H|hostname=s'  => \$host,
    'C|community=s' => \$community,
    'h|help|?'      => \$help,
);

# print the help message if option help is chosen or if no $host or
# $community are specified

pod2usage( -verbose => 2, -noperldoc => 1 ) if $help;

pod2usage(1) unless ( $host && $community );

my %ERRORS = (
    'OK'        => 0,
    'WARNING'   => 1,
    'CRITICAL'  => 2,
    'UNKNOWN'   => 3,
    'DEPENDENT' => 4,
);

# snmp oid that we want to get results from
$oid_softraidstatus = '1.3.6.1.4.1.24681.1.2.17.1.6.1';

# start snmp session
my ( $session, $error ) = Net::SNMP->session(
    -hostname  => $host,
    -community => $community,
);

# if the snmp session fails, exit check with error message
if ( !defined $session ) {
    printf "ERROR: %s.\n", $error;
    exit 1;
}

# get the value in our wanted oid
my $result = $session->get_request( -varbindlist => [$oid_softraidstatus], );

# if we cannot get a result, exit check with error message
if ( !defined $result ) {
    printf "ERROR: %s.\n", $error;
    $session->close();
    exit 1;
}

# close snmp session, after this we parse the results we get
$session->close();

# uncomment this to see the snmp status
#print "$result->{$oid_softraidstatus}.\n";

# nagios logica for monitoring. Warn on errors
if ( $result->{$oid_softraidstatus} eq "Ready" ) {
    print "OK: software raid status is $result->{$oid_softraidstatus}.\n";
    exit $ERRORS{OK};
}
elsif ( $result->{$oid_softraidstatus} eq "Rebuilding..." ) {
    print "WARNING: software raid status is $result->{$oid_softraidstatus}.\n";
    exit $ERRORS{WARNING};
}
elsif ( $result->{$oid_softraidstatus} =~ /^In degraded mode.*$/ ) {
    print "CRITICAL: software raid status is $result->{$oid_softraidstatus}.\n";
    exit $ERRORS{CRITICAL};
}
else {
    print "UNKNOWN: software raid status is $result->{$oid_softraidstatus}.\n";
    exit $ERRORS{UNKNOWN};
}

=head1 NAME

check_qnapraid

=head1 SYNOPSIS

check_qnapraid -H hostname -C community

=head1 DESCRIPTION

nagios plugin to check the status of the qnap appliances hardware.
The plugin requires that the SNMP service is running on the qnap
appliances, obviously.

This plugin is tested against TS-859U-RP+ Turbo NAS.

This plugin requires the Net::SNMP perl library.

=head1 ARGUMENTS

-H | --host         hostname/ip address of server to monitor

-C | --community    snmp community name used. Only v1 at this moment

-h | --help         this help message

=head1 AUTHOR
natxo@asenjo.nl

=cut

